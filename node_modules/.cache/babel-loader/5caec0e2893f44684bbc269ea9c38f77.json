{"ast":null,"code":"var _jsxFileName = \"/Users/karljussila/Thinkful/Project_Flashcards_Qualified_1/src/Layout/CardDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { listCards } from \"./../utils/api\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CardDisplay({\n  deck\n}) {\n  _s();\n\n  const history = useHistory();\n  const [cardList, setCardList] = useState([]);\n  const [cardIndex, setCardIndex] = useState(0);\n  const [cardCount, setCardCount] = useState(0);\n  const [flipped, setFlipped] = useState(false);\n\n  function flip() {\n    setFlipped(!flipped);\n  }\n\n  function nextCard() {\n    if (cardIndex === cardCount - 1) {\n      let restart = window.confirm(\"Restart cards?\\n\\nClick 'cancel' to return to the home page.\");\n\n      if (restart) {\n        setCardIndex(0);\n        setFlipped(false);\n        return;\n      }\n\n      history.push(\"/\");\n      return;\n    }\n\n    setCardIndex(cardIndex + 1);\n    setFlipped(false);\n  }\n\n  useEffect(() => {\n    setCardCount(cardList.length);\n  }, [cardList]);\n  useEffect(() => {\n    async function loadCards() {\n      const cards = await listCards(deck.id);\n      setCardList();\n    }\n\n    loadCards();\n  }, [deck]);\n\n  if (cardCount > 2) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: [\"Card \", cardIndex + 1, \" of \", cardList.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), cardCount > 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: flipped ? cardList[cardIndex].back : cardList[cardIndex].front\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 138\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-1\",\n            onClick: flip,\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), flipped ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: nextCard,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 107\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Not enough cards.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You need at least 3 cards to study. There are only \", cardCount, \" cards in this deck.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-primary\",\n      children: \"Add Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CardDisplay, \"99k/TvxzCRG32xs7mCl1M3ubs3M=\", false, function () {\n  return [useHistory];\n});\n\n_c = CardDisplay;\nexport default CardDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDisplay\");","map":{"version":3,"sources":["/Users/karljussila/Thinkful/Project_Flashcards_Qualified_1/src/Layout/CardDisplay.js"],"names":["React","useState","useEffect","listCards","Link","useHistory","CardDisplay","deck","history","cardList","setCardList","cardIndex","setCardIndex","cardCount","setCardCount","flipped","setFlipped","flip","nextCard","restart","window","confirm","push","length","loadCards","cards","id","back","front"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { listCards } from \"./../utils/api\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nfunction CardDisplay({ deck }) {\n    const history = useHistory();\n\n    const [cardList, setCardList] = useState([]);\n    const [cardIndex, setCardIndex] = useState(0);\n    const [cardCount, setCardCount] = useState(0);\n    const [flipped, setFlipped] = useState(false);\n\n    function flip() {\n        setFlipped(!flipped);\n    }\n\n    function nextCard() {\n        if (cardIndex === cardCount - 1) {\n            let restart = window.confirm(\"Restart cards?\\n\\nClick 'cancel' to return to the home page.\");\n            if (restart) {\n                setCardIndex(0);\n                setFlipped(false);\n                return;\n            }\n            history.push(\"/\");\n            return;\n        }\n        setCardIndex(cardIndex + 1);\n        setFlipped(false);\n    }\n\n    useEffect(() => {\n        setCardCount(cardList.length);\n    }, [cardList]);\n\n    useEffect(() => {\n        async function loadCards() {\n            const cards = await listCards(deck.id);\n            setCardList();\n        }\n        loadCards();\n    }, [deck]);\n\n    if (cardCount > 2) {\n        return (\n            <>\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Card {cardIndex + 1} of {cardList.length}</h5>\n                        {cardCount > 1 ? <p className=\"card-text\">{flipped ? cardList[cardIndex].back : cardList[cardIndex].front}</p> : <br />}\n                        <button className=\"btn btn-secondary mr-1\" onClick={flip}>Flip</button>\n                        {flipped ? <button className=\"btn btn-primary\" onClick={nextCard}>Next</button> : <div></div>}\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <>\n            <h2>Not enough cards.</h2>\n            <p>You need at least 3 cards to study. There are only {cardCount} cards in this deck.</p>\n            <Link className=\"btn btn-primary\">Add Cards</Link>\n        </>\n    )\n}\n\nexport default CardDisplay;\n"]},"metadata":{},"sourceType":"module"}